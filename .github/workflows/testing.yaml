name: Deploy release candidate to testing

on:
  push:
    tags:
      - 'v*.*.*-rc.*'

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: fleetoptimiser-backend
  FRONTEND_IMAGE_NAME: fleetoptimiser-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/checkout@v5

      - name: Log into registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract backend metadata (tags, labels)
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Extract frontend metadata (tags, labels)
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Is Tag Build
        id: tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          file: fleetoptimiser-frontend/Dockerfile
          context: fleetoptimiser-frontend
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}

      - name: Trigger webhook
        run: |
          curl -X POST https://listener.fleetoptimiser.droidsagencyai.com/webhook \
          -H "Content-Type: application/json" \
          -H "x-hub-signature: $WEBHOOK_SECRET" \
          -d "{\"tag\": \"${{ env.VERSION }}\"}"
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_KEY }}
